global proc shelf_ZOMBIE_MODELING () {
    global string $gBuffStr;
    global string $gBuffStr0;
    global string $gBuffStr1;


    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "//Move to Center\nmove -rpr 0 0.493 0;\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "//Move to Center\nmove -rpr 0 0.493 0;\nmakeIdentity -apply true -..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "moveToCenter" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "//Move to Center\nmove -rpr 0 0.493 0;\nmakeIdentity -apply true -t 1 -r 1 -s 1 -n 0 -pn 1;" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "\n//======================================================================\n// Window Procedures\n//======================================================================\nglobal proc Quick_rename_tool ()\n  {//Quick_rename_toolWindow\n\n  if (`window -q -exists Quick_rename_toolWindow`) deleteUI Quick_rename_toolWindow;\n  \n  window -s 0 -title \"Quick_rename_tool\" -maximizeButton 0 -minimizeButton 1 Quick_rename_toolWindow;\n\n//======================================================================\n// Rename Tools\ncolumnLayout;\nrowColumnLayout -numberOfColumns 1 -columnWidth 1 313 ;\n//frameLayout -label \"Rename and Number\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\" ;\n\t\n  textFieldGrp -label \"Rename:\" -text \"\" -columnWidth 1 70 -columnWidth 2 235 KK_RenameRenameTFG;\n\t\t\t\nrowColumnLayout -numberOfColumns 2 -columnWidth 1 130 -columnWidth 2 170;\n\tintFieldGrp -label \"Start #:\" -v1 1 -columnWidth 1 68 -columnWidth 2 60 KK_RenameStartIFG;\n\tintFieldGrp -label \"Padding:\" -v1 2 -columnWidth 1 64 -columnWidth 2 60 KK_RenamePaddingIFG;\nsetParent..;\n\trowColumnLayout -numberOfColumns 1 -columnWidth 1 306 ;\n\tbutton -h 23 -w 100 -l \"Rename and Number\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(3)\";\nsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n\t\t\t\n//======================================================================\n// Remove\n//frameLayout -label \"Simple rename\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\t\nrowColumnLayout -numberOfColumns 3 -cs 1 10 -cs 3 4 -columnWidth 1 84 -columnWidth 2 104 -columnWidth 3 104;\n\ttext -label \"Remove...\" -align \"left\";\n\tbutton -h 23 -w 60 -l \"First Character-->\" -bgc 0.1 0.2 0.2 -c \"remove_FirstChr()\";\n\tbutton -h 23 -w 60 -l \"<--Last Character\" -bgc 0.1 0.2 0.2 -c \"remove_LastChr()\";\nsetParent..;\n\t\t\t\t\nrowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 70 -columnWidth 2 170 -columnWidth 3 56;\n\ttext -l \" Hash Rename:\";\n\ttextFieldGrp -label \"\" -text \"name_####_suffix\" -columnWidth 1 10 -columnWidth 2 153 Rename_js_hashRenameTFG;\n\tbutton -h 23 -w 48 -l \"Rename\" -bgc 0.1 0.2 0.2 -c \"Rename_js_hashRename_MainProc()\"; \n\tsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n//======================================================================\n// Prefix - Suffix\n\t//frameLayout -label \" Add prefix or suffix\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\n\t//text -l \"\" -h 1;\n\trowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 55 -columnWidth 2 185 -columnWidth 3 56;\n\ttext -l \"(Before)\";\n\ttextFieldGrp -label \"\" -text \"prefix_\" -columnWidth 1 10 -columnWidth 2 168 prefixTFG;\n\tbutton -h 21 -l \"Add\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(1)\";\nsetParent..;\n\ntext -l \"\" -h 1;\n\trowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 55 -columnWidth 2 185 -columnWidth 3 56;\n\ttext -l \"(After)\";\n\ttextFieldGrp -label \"\" -text \"_suffix\" -columnWidth 1 10 -columnWidth 2 168 suffixTFG;\n\tbutton -h 21 -l \"Add\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(2)\";\nsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n//======================================================================\n// Quick suffix\n//frameLayout -label \" Add quick suffix\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\t\nrowColumnLayout -numberOfColumns 5 -columnWidth 1 61 -columnWidth 2 61 -columnWidth 3 61 -columnWidth 4 61 -columnWidth 5 62;\n\tbutton -l \"grp\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _grp\";\n\tbutton -l \"geo\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _geo\";\n\tbutton -l \"ctl\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _ctl\";\n\tbutton -l \"jnt\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _jnt\";\n\tbutton -l \"drv\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _drv\";\n\tsetParent ..;\nseparator -style \"in\" -w 315 ;       \n        \n\n//======================================================================\n// Search and Replace \n//frameLayout -label \"Search and Replace\"  -bgc 0.25 0.25 0.25 -w 311 -fn \"tinyBoldLabelFont\";\nrowColumnLayout -numberOfColumns 1 -columnWidth 1 313 ;\t\n\ttextFieldGrp -label \"Search:\" -text \"pasted_\" -columnWidth 1 70 -columnWidth 2 233 SearchAndReplace_SearchTFG;\n\ttextFieldGrp -label \"Replace:\" -text \"\" -columnWidth 1 70 -columnWidth 2 233 SearchAndReplace_ReplaceTFG;\n\tradioButtonGrp -bgc 0.25 0.25 0.25 -numberOfRadioButtons 3 -label \"\" -sl 1 -labelArray3 \"Hierarchy\" \"Selected\" \"All\" -columnWidth 1 30 SearchAndReplace_OptionRBG;\n\trowColumnLayout -numberOfColumns 1 -columnWidth 1 305 ;\n\tbutton  -h 23 -w 40-l \"Apply\" -bgc 0.1 0.2 0.2 -c \"SearchAndRename()\";\n\tsetParent..;\nsetParent..;\n\nwindow -e -wh 313 302 Quick_rename_toolWindow;\nshowWindow Quick_rename_toolWindow;\n\n}//Quick_rename_tool_Window\n\n//======================================================================\n//======================================================================\n// ---->  Remove Last character <----\n//======================================================================\n//======================================================================\n\nglobal proc remove_LastChr()\n{//remove_LastChr\n\n\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\tint $stringSize = size($myObj);\n\n\t\t\n\t\tif ($stringSize > 1) \n\t\t{\n\t\t\tstring $newName = `substring $myObj 1 ($stringSize - 1)`;\n\t\t\trename $obj $newName;\n\t\t}\n\t}\t\n}//remove_LastChr\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Remove First character <----\n//======================================================================\n//======================================================================\n\nglobal proc remove_FirstChr()\n{//remove_FirstChr\n\n\t\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\tint $stringSize = size($myObj);\n\t\t\n\t\tif ($stringSize > 1) \n\t\t{\n\t\t\tstring $newName = `substring $myObj 2 $stringSize`;\n\t\t\trename $obj $newName;\n\t\t}\n\t}\n}//remove_FirstChr\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Rename Selected Shapes <----\n//======================================================================\n//======================================================================\n\nglobal proc KK_RenameSelectedShape()\n{//KK_RenameSelectedShape\n\tstring $objects[] = `ls -sl`;\n\n\tstring $objTransform;\n\tfor ($objTransform in $objects)\n\t{\n\t\n\t\tstring $shapes[] = `listRelatives -s -f $objTransform`;\n\t\t\n\t\tstring $pathTransNodes[];\n\t\tint $numTokens = tokenize($objTransform, \"|\", $pathTransNodes);\n\t\tstring $myTransObj = $pathTransNodes[$numTokens - 1];\n\t\t\n\t\tstring $obj;\n\t\tint $num = 1;\n\t\t\n\t\tfor ($obj in $shapes)\n\t\t{\n\t\t\tstring $newShapeName = ($myTransObj + \"_Shape\" + $num);\n\t\t\trename $obj $newShapeName;\n\t\t\t$num += 1;\n\t\t}\n\t}\n}//KK_RenameSelectedShape\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Search and Rename <----\n//======================================================================\n//======================================================================\n\nglobal proc SearchAndRename()\n{\n    string $search = `textFieldGrp -q -tx SearchAndReplace_SearchTFG`;\n\tstring $replace = `textFieldGrp -q -tx SearchAndReplace_ReplaceTFG`;\n\tstring $options = `radioButtonGrp -q -sl SearchAndReplace_OptionRBG`;\n\t\n\tif ($options == 1)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"hierarchy\";\n\t}\n\t\n\telse if ($options == 2)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"selected\";\n\t}\n\t\n\telse if ($options == 3)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"all\";\n\t}\n}\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Quick suffix <----\n//======================================================================\n//======================================================================\n\nglobal proc quickSuffix(string $suffix)\n{//quickSuffix\n\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\trename $obj ($myObj + $suffix);\n\t}\n}//quickSuffix\n\n//======================================================================\n//======================================================================\n// ---->  hashRename\n//======================================================================\n//======================================================================\n\nglobal proc Rename_js_hashRename_MainProc()\n{\n\n    string $search = `textFieldGrp -q -tx Rename_js_hashRenameTFG`;\n    \n    if ($search != \"\")\n    {\n\t\tevalEcho (\"Rename_js_hashRename \\\"\" + $search + \"\\\"\");\n    }\n}\n\n\n\nglobal proc string Rename_js_replaceHash (string $string, int $number)\n{\n\n    string $result;\n    // we want to replace the #'s in the name with the $number.\n\n    string $substring = \"#+\";\n    $substring = `match $substring $string`;\n\n    // $substring is now the number of #'s\n    string $substringNum = substituteAllString($substring, \"#\", \"0\");\n    // now add the number at the end\n    string $numString = $number;\n\n    string $newString = ($substringNum + $numString);\n\n    // now strip away the start numbers so we only have the num left\n    int $fullSize =`size($newString)`;\n    int $numSize = `size($numString)`;\n    if ($numSize < size($substringNum))\n    {\n        $numSize = $numSize+1;\n        $numString = `substring $newString $numSize $fullSize`;\n    } \n    $result = `substitute $substring $string $numString`;\n    return $result;\n}\n\n\n\nglobal proc string[] Rename_js_hashRename (string $newName)\n{\n    // this procedure will rename the selected objects with $newName, and it will replace the # with a count.  It will zero-pad with the\n    // number of hashes\n\n    string $objs[0];\n    int $count = 0;\n    string $return[0];\n\n    $objs = `ls -sl`;\n\n    if (size($objs) > 0)\n    {\n        // create a dummy node for keeping track of all the objects.  when we rename them, it may change the object's\n        // names, which could get confusing for maya.\n        $node = `createNode unknown`;\n        addAttr -ln \"selObjects\" -at message -multi -im 0;\n\n        for ($obj in $objs)\n        {\n            // connect the attributes\n            connectAttr -na ($obj + \".message\") ($node + \".selObjects\");\n        }\n        \n        $con = `listConnections ($node + \".selObjects\")`;\n       \n        for ($x = 0; $x < size($con); $x++)\n        {\n            string $tmp[0];\n            $tmp = `listConnections ($node + \".selObjects[\"+$x+\"]\")`;\n            string $object = $tmp[0];\n      \n            // check the searchString for the #'s.  Based on the number of hashes, we'll replace them with the index number\n            $name = `Rename_js_replaceHash $newName ($x + 1)`;\n\n            // rename the object\n            $result = `rename $object $name`;\n            \n            print (\"// Renamed: \" + $object + \" --> \" + $result + \"\\n\");\n        } \n        $return = `listConnections ($node + \".selObjects\")`;\n        delete $node;\n\n    }\n    if ((`size $return`) > 0)\n        select $return;\n    return $return;\n}\n\n//======================================================================\n//======================================================================\n// ---->  cometRename.mel  procedures\n//======================================================================\n//======================================================================\n\n\n/*\n \n */\nproc string getShortName(string $obj)\n{\n    string $ret = \"\";\n    \n    if ($obj == \"\")\n        return $ret;\n        \n    string $parts[];\n    int $cnt = tokenize($obj, \"|\", $parts);\n    \n    if ($cnt <= 0)\n        $ret = $obj;\n    else\n        $ret = $parts[($cnt-1)];\n    \n    return $ret;\n}\n\n// --------------------------------------------------------------------------\n\nproc string chop(string $str)\n{\n    string $ret = \"\";\n\n    int $cnt = size($str);\n    \n    if ($cnt <= 1)\n        return $ret;\n    \n    $ret = `substring $str 1 ($cnt-1)`;\n\n    return $ret;\n}\n\n// --------------------------------------------------------------------------\n\nglobal proc Rename_KK_Kename(int $mode)\n{//Rename_KK_Kename\n    string $objs[] = `ls -sl -long`;\n    int $objCnt = size($objs);\n    int $i;\n\n\t// Get all UI data...\n\t//\n    string $prefix = `textFieldGrp -q -tx prefixTFG`;\n    string $suffix = `textFieldGrp -q -tx suffixTFG`;\n    string $rename = `textFieldGrp -q -tx KK_RenameRenameTFG`;\n    int $start = `intFieldGrp -q -v1 KK_RenameStartIFG`;\n    int $padding = `intFieldGrp -q -v1 KK_RenamePaddingIFG`;\n    \n    string $shortName;\n    string $newShortName;\n    string $newName;\n\n\t// Now do it\n\t//\n    for ($i=0; $i < $objCnt; ++$i)\n        {\n\t$obj = $objs[$i];\n\t\n\t$shortName = getShortName($obj);\n\t\t\n\tswitch ($mode)\n\t    {\n\t    case 1:\n\t        if ($prefix == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't add prefix, prefix entry field is blank!\");\n\t            return;\n\t    \t    }\n\t        $newShortName = ($prefix + $shortName);\n\t        break;\n\n\t    case 2:\n\t        if ($suffix == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't add suffix, suffix entry field is blank!\");\n\t            return;\n\t    \t    }\n\t        $newShortName = ($shortName + $suffix);\n\t        break;\n\n\t    case 3:\n\t        if ($rename == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't rename and number, rename entry field is blank!\");\n\t            return;\n\t            }\n\t    \t\t// get index of string as user wants\n\t    \tint $n = $i + $start;\n\t    \t\t// pad of 0's\n\t    \tstring $padStr = \"\";\n\t    \t\n\t    \t\t// Add padding as needed\n\t    \tfor ($p=1; $p < $padding; ++$p)\n\t    \t{\n\t\t\t\tif ($n < pow(10, $p) )\n\t\t\t\t\t$padStr += \"0\";\n\t\t    }\n\t    \t\n\t    \t$newShortName = ($rename+$padStr+$n);\n\t        break;\n\n\t    } // end of switch\n\t\n\t\n\t$newName = `rename $obj $newShortName`;\n\tselect -r $newName;\n\tstring $newLongNames[] = `ls -sl -long`;\n\tstring $newLongName = $newLongNames[0];\n\t\n\t    // Now update rest of stuff in list in case |long|names\n\t    // required it\n\tfor ($j=0; $j < $objCnt; ++$j)\n\t    {\n\t    string $tmp = $objs[$j];\n\n\t    $tmp += \"|\";\t// add to end for easy replacing\n\t    $tmp = `substitute ($obj+\"|\") $tmp (\"|\"+$newLongName+\"|\")`;\n\t    $tmp = chop($tmp);\n\t    \n\t    $objs[$j] = $tmp;\n\t    }\n\t\n\n\t}  // end of for all objs\n\n    select $objs;\n}//Rename_KK_Kename\n\n//--------------------------\n//--------------------------\n\nQuick_rename_tool\n\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "\n//=============================================================..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "QuickRename" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "commandButton.png" 
        -image1 "commandButton.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "\n//======================================================================\n// Window Procedures\n//======================================================================\nglobal proc Quick_rename_tool ()\n  {//Quick_rename_toolWindow\n\n  if (`window -q -exists Quick_rename_toolWindow`) deleteUI Quick_rename_toolWindow;\n  \n  window -s 0 -title \"Quick_rename_tool\" -maximizeButton 0 -minimizeButton 1 Quick_rename_toolWindow;\n\n//======================================================================\n// Rename Tools\ncolumnLayout;\nrowColumnLayout -numberOfColumns 1 -columnWidth 1 313 ;\n//frameLayout -label \"Rename and Number\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\" ;\n\t\n  textFieldGrp -label \"Rename:\" -text \"\" -columnWidth 1 70 -columnWidth 2 235 KK_RenameRenameTFG;\n\t\t\t\nrowColumnLayout -numberOfColumns 2 -columnWidth 1 130 -columnWidth 2 170;\n\tintFieldGrp -label \"Start #:\" -v1 1 -columnWidth 1 68 -columnWidth 2 60 KK_RenameStartIFG;\n\tintFieldGrp -label \"Padding:\" -v1 2 -columnWidth 1 64 -columnWidth 2 60 KK_RenamePaddingIFG;\nsetParent..;\n\trowColumnLayout -numberOfColumns 1 -columnWidth 1 306 ;\n\tbutton -h 23 -w 100 -l \"Rename and Number\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(3)\";\nsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n\t\t\t\n//======================================================================\n// Remove\n//frameLayout -label \"Simple rename\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\t\nrowColumnLayout -numberOfColumns 3 -cs 1 10 -cs 3 4 -columnWidth 1 84 -columnWidth 2 104 -columnWidth 3 104;\n\ttext -label \"Remove...\" -align \"left\";\n\tbutton -h 23 -w 60 -l \"First Character-->\" -bgc 0.1 0.2 0.2 -c \"remove_FirstChr()\";\n\tbutton -h 23 -w 60 -l \"<--Last Character\" -bgc 0.1 0.2 0.2 -c \"remove_LastChr()\";\nsetParent..;\n\t\t\t\t\nrowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 70 -columnWidth 2 170 -columnWidth 3 56;\n\ttext -l \" Hash Rename:\";\n\ttextFieldGrp -label \"\" -text \"name_####_suffix\" -columnWidth 1 10 -columnWidth 2 153 Rename_js_hashRenameTFG;\n\tbutton -h 23 -w 48 -l \"Rename\" -bgc 0.1 0.2 0.2 -c \"Rename_js_hashRename_MainProc()\"; \n\tsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n//======================================================================\n// Prefix - Suffix\n\t//frameLayout -label \" Add prefix or suffix\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\n\t//text -l \"\" -h 1;\n\trowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 55 -columnWidth 2 185 -columnWidth 3 56;\n\ttext -l \"(Before)\";\n\ttextFieldGrp -label \"\" -text \"prefix_\" -columnWidth 1 10 -columnWidth 2 168 prefixTFG;\n\tbutton -h 21 -l \"Add\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(1)\";\nsetParent..;\n\ntext -l \"\" -h 1;\n\trowColumnLayout -numberOfColumns 3 -cs 1 10 -columnWidth 1 55 -columnWidth 2 185 -columnWidth 3 56;\n\ttext -l \"(After)\";\n\ttextFieldGrp -label \"\" -text \"_suffix\" -columnWidth 1 10 -columnWidth 2 168 suffixTFG;\n\tbutton -h 21 -l \"Add\" -bgc 0.1 0.2 0.2 -c \"Rename_KK_Kename(2)\";\nsetParent..;\nseparator -style \"in\" -w 315 ;\n\t\n//======================================================================\n// Quick suffix\n//frameLayout -label \" Add quick suffix\"  -bgc 0.25 0.25 0.25 -w 313 -fn \"tinyBoldLabelFont\";\t\nrowColumnLayout -numberOfColumns 5 -columnWidth 1 61 -columnWidth 2 61 -columnWidth 3 61 -columnWidth 4 61 -columnWidth 5 62;\n\tbutton -l \"grp\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _grp\";\n\tbutton -l \"geo\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _geo\";\n\tbutton -l \"ctl\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _ctl\";\n\tbutton -l \"jnt\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _jnt\";\n\tbutton -l \"drv\" -bgc 0.1 0.2 0.2 -c \"quickSuffix _drv\";\n\tsetParent ..;\nseparator -style \"in\" -w 315 ;       \n        \n\n//======================================================================\n// Search and Replace \n//frameLayout -label \"Search and Replace\"  -bgc 0.25 0.25 0.25 -w 311 -fn \"tinyBoldLabelFont\";\nrowColumnLayout -numberOfColumns 1 -columnWidth 1 313 ;\t\n\ttextFieldGrp -label \"Search:\" -text \"pasted_\" -columnWidth 1 70 -columnWidth 2 233 SearchAndReplace_SearchTFG;\n\ttextFieldGrp -label \"Replace:\" -text \"\" -columnWidth 1 70 -columnWidth 2 233 SearchAndReplace_ReplaceTFG;\n\tradioButtonGrp -bgc 0.25 0.25 0.25 -numberOfRadioButtons 3 -label \"\" -sl 1 -labelArray3 \"Hierarchy\" \"Selected\" \"All\" -columnWidth 1 30 SearchAndReplace_OptionRBG;\n\trowColumnLayout -numberOfColumns 1 -columnWidth 1 305 ;\n\tbutton  -h 23 -w 40-l \"Apply\" -bgc 0.1 0.2 0.2 -c \"SearchAndRename()\";\n\tsetParent..;\nsetParent..;\n\nwindow -e -wh 313 302 Quick_rename_toolWindow;\nshowWindow Quick_rename_toolWindow;\n\n}//Quick_rename_tool_Window\n\n//======================================================================\n//======================================================================\n// ---->  Remove Last character <----\n//======================================================================\n//======================================================================\n\nglobal proc remove_LastChr()\n{//remove_LastChr\n\n\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\tint $stringSize = size($myObj);\n\n\t\t\n\t\tif ($stringSize > 1) \n\t\t{\n\t\t\tstring $newName = `substring $myObj 1 ($stringSize - 1)`;\n\t\t\trename $obj $newName;\n\t\t}\n\t}\t\n}//remove_LastChr\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Remove First character <----\n//======================================================================\n//======================================================================\n\nglobal proc remove_FirstChr()\n{//remove_FirstChr\n\n\t\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\tint $stringSize = size($myObj);\n\t\t\n\t\tif ($stringSize > 1) \n\t\t{\n\t\t\tstring $newName = `substring $myObj 2 $stringSize`;\n\t\t\trename $obj $newName;\n\t\t}\n\t}\n}//remove_FirstChr\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Rename Selected Shapes <----\n//======================================================================\n//======================================================================\n\nglobal proc KK_RenameSelectedShape()\n{//KK_RenameSelectedShape\n\tstring $objects[] = `ls -sl`;\n\n\tstring $objTransform;\n\tfor ($objTransform in $objects)\n\t{\n\t\n\t\tstring $shapes[] = `listRelatives -s -f $objTransform`;\n\t\t\n\t\tstring $pathTransNodes[];\n\t\tint $numTokens = tokenize($objTransform, \"|\", $pathTransNodes);\n\t\tstring $myTransObj = $pathTransNodes[$numTokens - 1];\n\t\t\n\t\tstring $obj;\n\t\tint $num = 1;\n\t\t\n\t\tfor ($obj in $shapes)\n\t\t{\n\t\t\tstring $newShapeName = ($myTransObj + \"_Shape\" + $num);\n\t\t\trename $obj $newShapeName;\n\t\t\t$num += 1;\n\t\t}\n\t}\n}//KK_RenameSelectedShape\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Search and Rename <----\n//======================================================================\n//======================================================================\n\nglobal proc SearchAndRename()\n{\n    string $search = `textFieldGrp -q -tx SearchAndReplace_SearchTFG`;\n\tstring $replace = `textFieldGrp -q -tx SearchAndReplace_ReplaceTFG`;\n\tstring $options = `radioButtonGrp -q -sl SearchAndReplace_OptionRBG`;\n\t\n\tif ($options == 1)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"hierarchy\";\n\t}\n\t\n\telse if ($options == 2)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"selected\";\n\t}\n\t\n\telse if ($options == 3)\n\t{\n\t\t\tsearchReplaceNames $search $replace \"all\";\n\t}\n}\n\n\n\n//======================================================================\n//======================================================================\n// ---->  Quick suffix <----\n//======================================================================\n//======================================================================\n\nglobal proc quickSuffix(string $suffix)\n{//quickSuffix\n\n\tstring $jointSelected[0]= `ls -sl -long`;\n\tint $jointSelectedSize = size($jointSelected);\n\n\tfor ($i=$jointSelectedSize-1; $i >= 0; $i--)\n\t{\n\t\tstring $obj = $jointSelected[$i];\n\t\n\t\tstring $pathNodes[];\n\t\tint $numTokens = tokenize($obj, \"|\", $pathNodes);\n\t\tstring $myObj = $pathNodes[$numTokens - 1];\n\t\t\n\t\trename $obj ($myObj + $suffix);\n\t}\n}//quickSuffix\n\n//======================================================================\n//======================================================================\n// ---->  hashRename\n//======================================================================\n//======================================================================\n\nglobal proc Rename_js_hashRename_MainProc()\n{\n\n    string $search = `textFieldGrp -q -tx Rename_js_hashRenameTFG`;\n    \n    if ($search != \"\")\n    {\n\t\tevalEcho (\"Rename_js_hashRename \\\"\" + $search + \"\\\"\");\n    }\n}\n\n\n\nglobal proc string Rename_js_replaceHash (string $string, int $number)\n{\n\n    string $result;\n    // we want to replace the #'s in the name with the $number.\n\n    string $substring = \"#+\";\n    $substring = `match $substring $string`;\n\n    // $substring is now the number of #'s\n    string $substringNum = substituteAllString($substring, \"#\", \"0\");\n    // now add the number at the end\n    string $numString = $number;\n\n    string $newString = ($substringNum + $numString);\n\n    // now strip away the start numbers so we only have the num left\n    int $fullSize =`size($newString)`;\n    int $numSize = `size($numString)`;\n    if ($numSize < size($substringNum))\n    {\n        $numSize = $numSize+1;\n        $numString = `substring $newString $numSize $fullSize`;\n    } \n    $result = `substitute $substring $string $numString`;\n    return $result;\n}\n\n\n\nglobal proc string[] Rename_js_hashRename (string $newName)\n{\n    // this procedure will rename the selected objects with $newName, and it will replace the # with a count.  It will zero-pad with the\n    // number of hashes\n\n    string $objs[0];\n    int $count = 0;\n    string $return[0];\n\n    $objs = `ls -sl`;\n\n    if (size($objs) > 0)\n    {\n        // create a dummy node for keeping track of all the objects.  when we rename them, it may change the object's\n        // names, which could get confusing for maya.\n        $node = `createNode unknown`;\n        addAttr -ln \"selObjects\" -at message -multi -im 0;\n\n        for ($obj in $objs)\n        {\n            // connect the attributes\n            connectAttr -na ($obj + \".message\") ($node + \".selObjects\");\n        }\n        \n        $con = `listConnections ($node + \".selObjects\")`;\n       \n        for ($x = 0; $x < size($con); $x++)\n        {\n            string $tmp[0];\n            $tmp = `listConnections ($node + \".selObjects[\"+$x+\"]\")`;\n            string $object = $tmp[0];\n      \n            // check the searchString for the #'s.  Based on the number of hashes, we'll replace them with the index number\n            $name = `Rename_js_replaceHash $newName ($x + 1)`;\n\n            // rename the object\n            $result = `rename $object $name`;\n            \n            print (\"// Renamed: \" + $object + \" --> \" + $result + \"\\n\");\n        } \n        $return = `listConnections ($node + \".selObjects\")`;\n        delete $node;\n\n    }\n    if ((`size $return`) > 0)\n        select $return;\n    return $return;\n}\n\n//======================================================================\n//======================================================================\n// ---->  cometRename.mel  procedures\n//======================================================================\n//======================================================================\n\n\n/*\n \n */\nproc string getShortName(string $obj)\n{\n    string $ret = \"\";\n    \n    if ($obj == \"\")\n        return $ret;\n        \n    string $parts[];\n    int $cnt = tokenize($obj, \"|\", $parts);\n    \n    if ($cnt <= 0)\n        $ret = $obj;\n    else\n        $ret = $parts[($cnt-1)];\n    \n    return $ret;\n}\n\n// --------------------------------------------------------------------------\n\nproc string chop(string $str)\n{\n    string $ret = \"\";\n\n    int $cnt = size($str);\n    \n    if ($cnt <= 1)\n        return $ret;\n    \n    $ret = `substring $str 1 ($cnt-1)`;\n\n    return $ret;\n}\n\n// --------------------------------------------------------------------------\n\nglobal proc Rename_KK_Kename(int $mode)\n{//Rename_KK_Kename\n    string $objs[] = `ls -sl -long`;\n    int $objCnt = size($objs);\n    int $i;\n\n\t// Get all UI data...\n\t//\n    string $prefix = `textFieldGrp -q -tx prefixTFG`;\n    string $suffix = `textFieldGrp -q -tx suffixTFG`;\n    string $rename = `textFieldGrp -q -tx KK_RenameRenameTFG`;\n    int $start = `intFieldGrp -q -v1 KK_RenameStartIFG`;\n    int $padding = `intFieldGrp -q -v1 KK_RenamePaddingIFG`;\n    \n    string $shortName;\n    string $newShortName;\n    string $newName;\n\n\t// Now do it\n\t//\n    for ($i=0; $i < $objCnt; ++$i)\n        {\n\t$obj = $objs[$i];\n\t\n\t$shortName = getShortName($obj);\n\t\t\n\tswitch ($mode)\n\t    {\n\t    case 1:\n\t        if ($prefix == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't add prefix, prefix entry field is blank!\");\n\t            return;\n\t    \t    }\n\t        $newShortName = ($prefix + $shortName);\n\t        break;\n\n\t    case 2:\n\t        if ($suffix == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't add suffix, suffix entry field is blank!\");\n\t            return;\n\t    \t    }\n\t        $newShortName = ($shortName + $suffix);\n\t        break;\n\n\t    case 3:\n\t        if ($rename == \"\")\n\t            {\n\t            warning -sl 0 (\"Can't rename and number, rename entry field is blank!\");\n\t            return;\n\t            }\n\t    \t\t// get index of string as user wants\n\t    \tint $n = $i + $start;\n\t    \t\t// pad of 0's\n\t    \tstring $padStr = \"\";\n\t    \t\n\t    \t\t// Add padding as needed\n\t    \tfor ($p=1; $p < $padding; ++$p)\n\t    \t{\n\t\t\t\tif ($n < pow(10, $p) )\n\t\t\t\t\t$padStr += \"0\";\n\t\t    }\n\t    \t\n\t    \t$newShortName = ($rename+$padStr+$n);\n\t        break;\n\n\t    } // end of switch\n\t\n\t\n\t$newName = `rename $obj $newShortName`;\n\tselect -r $newName;\n\tstring $newLongNames[] = `ls -sl -long`;\n\tstring $newLongName = $newLongNames[0];\n\t\n\t    // Now update rest of stuff in list in case |long|names\n\t    // required it\n\tfor ($j=0; $j < $objCnt; ++$j)\n\t    {\n\t    string $tmp = $objs[$j];\n\n\t    $tmp += \"|\";\t// add to end for easy replacing\n\t    $tmp = `substitute ($obj+\"|\") $tmp (\"|\"+$newLongName+\"|\")`;\n\t    $tmp = chop($tmp);\n\t    \n\t    $objs[$j] = $tmp;\n\t    }\n\t\n\n\t}  // end of for all objs\n\n    select $objs;\n}//Rename_KK_Kename\n\n//--------------------------\n//--------------------------\n\nQuick_rename_tool\n\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "from maya import cmds\n\nlistGeo = []\n\nmeshSelect = cmds.ls( sl = True, sn = True )\n\nfor name in meshSelect:\n    newName = name.split(\"Shape\")[0]\n    listGeo.append(newName)\n    \nprint listGeo\n\ndef applyMaterial(node):\n    if cmds.objExists(node):\n        shd = cmds.shadingNode('blinn', name=\"%s_mat\" % node, asShader=True)\n        shdSG = cmds.sets(name='%sSG' % shd, empty=True, renderable=True, noSurfaceShader=True)\n        cmds.connectAttr('%s.outColor' % shd, '%s.surfaceShader' % shdSG)\n        cmds.sets(node, e=True, forceElement=shdSG)\n\n\nfor mesh in listGeo:\n    applyMaterial(mesh)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "from maya import cmds\n\nlistGeo = []\n\nmeshSelect = cmds.ls( sl = ..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Blinn" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from maya import cmds\n\nlistGeo = []\n\nmeshSelect = cmds.ls( sl = True, sn = True )\n\nfor name in meshSelect:\n    newName = name.split(\"Shape\")[0]\n    listGeo.append(newName)\n    \nprint listGeo\n\ndef applyMaterial(node):\n    if cmds.objExists(node):\n        shd = cmds.shadingNode('blinn', name=\"%s_mat\" % node, asShader=True)\n        shdSG = cmds.sets(name='%sSG' % shd, empty=True, renderable=True, noSurfaceShader=True)\n        cmds.connectAttr('%s.outColor' % shd, '%s.surfaceShader' % shdSG)\n        cmds.sets(node, e=True, forceElement=shdSG)\n\n\nfor mesh in listGeo:\n    applyMaterial(mesh)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Freeze Transformations" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "FT" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "FreezeTransformations" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Select an object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "Center Pivot" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "CP" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconModify.png" 
        -image1 "menuIconModify.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "CenterPivot" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "Delete construction history on the selected object(s)" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "History" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "Hist" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "menuIconEdit.png" 
        -image1 "menuIconEdit.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "DeleteHistory" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import UVTransfer as uvTrans\nMCuvTrans = uvTrans.MainClassUVTransfer()\nMCuvTrans.uvTransUI()\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "UVTrans" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "UVTrans" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import UVTransfer as uvTrans\nMCuvTrans = uvTrans.MainClassUVTransfer()\nMCuvTrans.uvTransUI()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "import UVCheckerPattern as UVCP\nMCUVCP = UVCP.MainClassUVCP()\nMCUVCP.uvCPUI()\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "UVCheck" 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "UVCheck" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "pythonFamily.png" 
        -image1 "pythonFamily.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "import UVCheckerPattern as UVCP\nMCUVCP = UVCP.MainClassUVCP()\nMCUVCP.uvCPUI()\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "from maya import cmds\n\nselGeo = cmds.ls( g = True, v = True )\nselGrp = cmds.listRelatives( selGeo, allParents = True )\nallObj = selGeo + selGrp\n\nfor i in allObj:\n    cmds.makeIdentity( i, apply = True)\n" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "from maya import cmds\n\nselGeo = cmds.ls( g = True, v = True )\nse..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "freezeTrans" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "FreezeTransform.png" 
        -image1 "FreezeTransform.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from maya import cmds\n\nselGeo = cmds.ls( g = True, v = True )\nselGrp = cmds.listRelatives( selGeo, allParents = True )\nallObj = selGeo + selGrp\n\nfor i in allObj:\n    cmds.makeIdentity( i, apply = True)\n" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 39
        -height 39
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "aplica softenEdge em todos os objetos" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "from maya import cmds\n\nselGeo = cmds.ls( g = True, v = True )\n\nf..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -imageOverlayLabel "softenEdge" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "vacantCell.png" 
        -image1 "vacantCell.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "from maya import cmds\n\nselGeo = cmds.ls( g = True, v = True )\n\nfor i in selGeo:\n    cmds.polySoftEdge( i, a = 180, ch = False)" 
        -sourceType "python" 
        -commandRepeatable 1
        -flat 1
    ;
    shelfButton
        -enableCommandRepeat 1
        -enable 1
        -width 35
        -height 35
        -manage 1
        -visible 1
        -preventOverride 0
        -annotation "reference_scale" 
        -enableBackground 0
        -backgroundColor 0 0 0 
        -highlightColor 0.321569 0.521569 0.65098 
        -align "center" 
        -label "file -r -type \"mayaAscii\"  -ignoreVersion -gl -mergeNamespacesOn..." 
        -labelOffset 0
        -rotation 0
        -flipX 0
        -flipY 0
        -useAlpha 1
        -font "plainLabelFont" 
        -overlayLabelColor 0.8 0.8 0.8 
        -overlayLabelBackColor 0 0 0 0.5 
        -image "alignTool.png" 
        -image1 "alignTool.png" 
        -style "iconOnly" 
        -marginWidth 1
        -marginHeight 1
        -command "file -r -type \"mayaAscii\"  -ignoreVersion -gl -mergeNamespacesOnClash false -namespace \"scale_reference\" -options \"v=0;\" \"X:/INHOUSE/MayaScripts/2018/reference_scale/scenes/scale_reference.ma\";\n" 
        -sourceType "mel" 
        -commandRepeatable 1
        -flat 1
    ;

} 
